#!/usr/bin/env bash

set -euo pipefail

if [[ -n "${GIT_PILE_VERBOSE:-}" ]]; then
  set -x
fi

readonly commit_to_rebase=${1:-HEAD}
branch_name="${GIT_PILE_PREFIX:-}$(git show --no-patch --format=%f "$commit_to_rebase" | tr '[:upper:]' '[:lower:]')"
if ! git show-ref --quiet "$branch_name"; then
  echo "error: branch '$branch_name' doesn't exist" >&2
  exit 1
fi

worktree_dir="$(git pileworktreepath)"
if [[ ! -d "$worktree_dir" ]]; then
  git worktree add -f "$worktree_dir" "$branch_name"
else
  git -C "$worktree_dir" switch "$branch_name"
fi

_detach_branch() {
  git -C "$worktree_dir" switch --detach --quiet
}

trap _detach_branch EXIT

branch_with_remote=$(git rev-parse --abbrev-ref --symbolic-full-name "@{upstream}")
# TODO: Might have to pass -i here sometimes
if ! git -C "$worktree_dir" rebase "$branch_with_remote"; then
  if git -C "$worktree_dir" mergetool; then
    GIT_EDITOR=true git -C "$worktree_dir" rebase --continue
  else
    git -C "$worktree_dir" rebase --abort
    exit 1
  fi
fi

git -C "$worktree_dir" push --force-with-lease --quiet
